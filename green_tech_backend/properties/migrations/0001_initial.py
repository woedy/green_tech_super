# Generated by Django 4.2.7 on 2025-09-25 10:49

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=120, unique=True, verbose_name="slug"),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "summary",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="summary"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("apartment", "Apartment"),
                            ("house", "House"),
                            ("villa", "Villa"),
                            ("townhouse", "Townhouse"),
                            ("commercial", "Commercial"),
                        ],
                        max_length=32,
                        verbose_name="property type",
                    ),
                ),
                (
                    "listing_type",
                    models.CharField(
                        choices=[("sale", "For Sale"), ("rent", "For Rent")],
                        max_length=10,
                        verbose_name="listing type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("under_offer", "Under Offer"),
                            ("sold", "Sold"),
                            ("rented", "Rented"),
                        ],
                        default="published",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="price",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "bedrooms",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="bedrooms"
                    ),
                ),
                (
                    "bathrooms",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="bathrooms"
                    ),
                ),
                (
                    "area_sq_m",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        verbose_name="internal area (sqm)",
                    ),
                ),
                (
                    "plot_sq_m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="plot size (sqm)",
                    ),
                ),
                (
                    "year_built",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="year built"
                    ),
                ),
                (
                    "hero_image_url",
                    models.URLField(blank=True, verbose_name="hero image url"),
                ),
                (
                    "sustainability_score",
                    models.PositiveSmallIntegerField(
                        default=60, verbose_name="sustainability score"
                    ),
                ),
                (
                    "energy_rating",
                    models.PositiveSmallIntegerField(
                        default=3, verbose_name="energy rating"
                    ),
                ),
                (
                    "water_rating",
                    models.PositiveSmallIntegerField(
                        default=3, verbose_name="water rating"
                    ),
                ),
                (
                    "eco_features",
                    models.JSONField(
                        blank=True, default=list, verbose_name="eco features"
                    ),
                ),
                (
                    "amenities",
                    models.JSONField(
                        blank=True, default=list, verbose_name="amenities"
                    ),
                ),
                (
                    "highlights",
                    models.JSONField(
                        blank=True, default=list, verbose_name="highlights"
                    ),
                ),
                ("city", models.CharField(max_length=100, verbose_name="city")),
                (
                    "country",
                    models.CharField(
                        default="Ghana", max_length=100, verbose_name="country"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="address"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(default=False, verbose_name="featured"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "listed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="listed_properties",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="properties",
                        to="locations.region",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="PropertyInquiry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=120, verbose_name="name")),
                ("email", models.EmailField(max_length=254, verbose_name="email")),
                (
                    "phone",
                    models.CharField(blank=True, max_length=50, verbose_name="phone"),
                ),
                ("message", models.TextField(blank=True, verbose_name="message")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in_progress", "In progress"),
                            ("closed", "Closed"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inquiries",
                        to="properties.property",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="PropertyImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.URLField(verbose_name="image url")),
                (
                    "caption",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="caption"
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="is primary"),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="order"),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="properties.property",
                    ),
                ),
            ],
            options={
                "ordering": ("order", "id"),
            },
        ),
        migrations.CreateModel(
            name="ViewingAppointment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("scheduled_for", models.DateTimeField(verbose_name="scheduled for")),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="viewing_appointments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inquiry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="properties.propertyinquiry",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="properties.property",
                    ),
                ),
            ],
            options={
                "ordering": ("scheduled_for",),
                "indexes": [
                    models.Index(
                        fields=["agent", "scheduled_for"],
                        name="properties__agent_i_289ae3_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["property_type", "listing_type"],
                name="properties__propert_6ab6fb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["region", "featured"], name="properties__region__3555c9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(fields=["price"], name="properties__price_32e7c2_idx"),
        ),
    ]
