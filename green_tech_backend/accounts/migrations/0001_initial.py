# Generated by ChatGPT manual migration
from django.conf import settings
from django.db import migrations, models
import django.utils.timezone
import accounts.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text=(
                            'Designates whether this user should be treated as active. '
                            'Unselect this instead of deleting accounts.'
                        ),
                        verbose_name='active',
                    ),
                ),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                (
                    'user_type',
                    models.CharField(
                        choices=[
                            ('CUSTOMER', 'Customer'),
                            ('AGENT', 'Real Estate Agent'),
                            ('BUILDER', 'Builder/Contractor'),
                            ('ADMIN', 'Admin'),
                        ],
                        default='CUSTOMER',
                        max_length=20,
                        verbose_name='user type',
                    ),
                ),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                (
                    'profile_picture',
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to='profile_pics/',
                        verbose_name='profile picture',
                    ),
                ),
                ('is_verified', models.BooleanField(default=False, verbose_name='verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text=(
                            'The groups this user belongs to. '
                            'A user will get all permissions granted to each of their groups.'
                        ),
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='bio')),
                ('company_name', models.CharField(blank=True, max_length=100, verbose_name='company name')),
                ('license_number', models.CharField(blank=True, max_length=50, verbose_name='license number')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='years of experience')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('country', models.CharField(blank=True, default='Ghana', max_length=100, verbose_name='country')),
                ('facebook', models.URLField(blank=True, verbose_name='facebook profile')),
                ('twitter', models.URLField(blank=True, verbose_name='twitter profile')),
                ('linkedin', models.URLField(blank=True, verbose_name='linkedin profile')),
                ('instagram', models.URLField(blank=True, verbose_name='instagram profile')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=models.deletion.CASCADE,
                        related_name='profile',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
            },
        ),
    ]
