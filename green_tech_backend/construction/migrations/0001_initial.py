# Generated by Django 4.2.7 on 2025-10-06 19:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("properties", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ConstructionRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "current_step",
                    models.CharField(
                        choices=[
                            ("project_details", "Project Details"),
                            ("location", "Location"),
                            ("eco_features", "Eco Features"),
                            ("budget", "Budget"),
                            ("review", "Review & Submit"),
                        ],
                        default="project_details",
                        max_length=20,
                        verbose_name="current step",
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="is completed"),
                ),
                (
                    "customization_data",
                    models.JSONField(
                        default=dict,
                        help_text="Stores data from each step of the customization process",
                        verbose_name="customization data",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "construction_type",
                    models.CharField(
                        choices=[
                            ("NEW", "New Construction"),
                            ("RENO", "Renovation"),
                            ("EXT", "Extension"),
                            ("LAND", "Landscaping"),
                            ("INT", "Interior Design"),
                        ],
                        default="NEW",
                        max_length=10,
                        verbose_name="construction type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PENDING", "Pending Approval"),
                            ("APPROVED", "Approved"),
                            ("IN_PROGRESS", "In Progress"),
                            ("ON_HOLD", "On Hold"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="DRAFT",
                        max_length=15,
                        verbose_name="status",
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="address")),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "region",
                    models.CharField(blank=True, max_length=100, verbose_name="region"),
                ),
                (
                    "start_date",
                    models.DateField(blank=True, null=True, verbose_name="start date"),
                ),
                (
                    "estimated_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="estimated end date"
                    ),
                ),
                (
                    "actual_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="actual end date"
                    ),
                ),
                (
                    "budget",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated total budget in GHS",
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="budget",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="GHS",
                        help_text="Currency code (e.g., GHS, USD)",
                        max_length=3,
                        verbose_name="currency",
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Calculated estimated cost based on selected features and regional pricing",
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="estimated cost",
                    ),
                ),
                (
                    "target_energy_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Target energy efficiency rating (1-5)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="target energy rating",
                    ),
                ),
                (
                    "target_water_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Target water efficiency rating (1-5)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="target water rating",
                    ),
                ),
                (
                    "target_sustainability_score",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Target overall sustainability score (0-100)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="target sustainability score",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="construction_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="client",
                    ),
                ),
                (
                    "contractors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="contracted_construction_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="contractors",
                    ),
                ),
                (
                    "project_manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_construction_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="project manager",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="construction_requests",
                        to="properties.property",
                        verbose_name="property",
                    ),
                ),
            ],
            options={
                "verbose_name": "construction request",
                "verbose_name_plural": "construction requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EcoFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="feature name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("SOLAR", "Solar Energy"),
                            ("WATER", "Water Conservation"),
                            ("MATERIALS", "Eco-friendly Materials"),
                            ("WASTE", "Waste Management"),
                            ("LANDSCAPING", "Sustainable Landscaping"),
                            ("INSULATION", "Insulation & Ventilation"),
                            ("SMART_HOME", "Smart Home Technology"),
                        ],
                        max_length=20,
                        verbose_name="category",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="CSS class for the feature icon",
                        max_length=50,
                        verbose_name="icon class",
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True, verbose_name="is available in Ghana"
                    ),
                ),
                (
                    "requires_specialist",
                    models.BooleanField(
                        default=False, verbose_name="requires specialist installation"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "eco feature",
                "verbose_name_plural": "eco features",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="GhanaRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("GREATER_ACCRA", "Greater Accra"),
                            ("ASHANTI", "Ashanti"),
                            ("EASTERN", "Eastern"),
                            ("WESTERN", "Western"),
                            ("CENTRAL", "Central"),
                            ("VOLTA", "Volta"),
                            ("NORTHERN", "Northern"),
                            ("UPPER_EAST", "Upper East"),
                            ("UPPER_WEST", "Upper West"),
                            ("BRONG_AHAFO", "Brong Ahafo"),
                            ("OTI", "Oti"),
                            ("SAVANNAH", "Savannah"),
                            ("NORTH_EAST", "North East"),
                            ("WESTERN_NORTH", "Western North"),
                            ("AHAFO", "Ahafo"),
                            ("BONO_EAST", "Bono East"),
                        ],
                        max_length=50,
                        unique=True,
                        verbose_name="region name",
                    ),
                ),
                (
                    "capital",
                    models.CharField(max_length=100, verbose_name="capital city"),
                ),
                (
                    "cost_multiplier",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        help_text="Cost multiplier for this region (e.g., 1.2 for 20% higher costs)",
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(0.1)],
                        verbose_name="cost multiplier",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "Ghana region",
                "verbose_name_plural": "Ghana regions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="project title"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="project description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PLANNING", "Planning"),
                            ("IN_PROGRESS", "In Progress"),
                            ("ON_HOLD", "On Hold"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("DELAYED", "Delayed"),
                        ],
                        default="DRAFT",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "current_phase",
                    models.CharField(
                        choices=[
                            ("SITE_PREPARATION", "Site Preparation"),
                            ("FOUNDATION", "Foundation"),
                            ("FRAMING", "Framing"),
                            ("ROOFING", "Roofing"),
                            ("EXTERIOR", "Exterior Work"),
                            ("PLUMBING", "Plumbing"),
                            ("ELECTRICAL", "Electrical"),
                            ("INSULATION", "Insulation"),
                            ("DRYWALL", "Drywall"),
                            ("INTERIOR", "Interior Finishes"),
                            ("FLOORING", "Flooring"),
                            ("PAINTING", "Painting"),
                            ("LANDSCAPING", "Landscaping"),
                            ("FINAL_INSPECTION", "Final Inspection"),
                            ("COMPLETED", "Completed"),
                        ],
                        default="SITE_PREPARATION",
                        max_length=20,
                        verbose_name="current phase",
                    ),
                ),
                (
                    "planned_start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="planned start date"
                    ),
                ),
                (
                    "actual_start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="actual start date"
                    ),
                ),
                (
                    "planned_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="planned end date"
                    ),
                ),
                (
                    "actual_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="actual end date"
                    ),
                ),
                (
                    "estimated_budget",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=14,
                        verbose_name="estimated budget",
                    ),
                ),
                (
                    "actual_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=14,
                        verbose_name="actual cost",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="GHS", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "project",
                "verbose_name_plural": "projects",
                "ordering": ["-created_at"],
                "permissions": [
                    ("can_manage_projects", "Can manage all projects"),
                    ("can_view_all_projects", "Can view all projects"),
                    ("can_approve_projects", "Can approve project changes"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ProjectChatMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("body", models.TextField(verbose_name="message body")),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="metadata"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "edited_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="edited at"
                    ),
                ),
            ],
            options={
                "verbose_name": "project chat message",
                "verbose_name_plural": "project chat messages",
                "ordering": ("created_at",),
            },
        ),
        migrations.CreateModel(
            name="ProjectDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("PLAN", "Architectural Plan"),
                            ("PERMIT", "Permit"),
                            ("CONTRACT", "Contract"),
                            ("REPORT", "Report"),
                            ("PHOTO", "Progress Photo"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=20,
                        verbose_name="document type",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "is_required",
                    models.BooleanField(default=False, verbose_name="is required"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_project_documents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
            ],
            options={
                "verbose_name": "project document",
                "verbose_name_plural": "project documents",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Quote",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "quote_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="quote number"
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(default=1, verbose_name="version"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PENDING_APPROVAL", "Pending Approval"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("EXPIRED", "Expired"),
                            ("ACCEPTED", "Accepted"),
                            ("REVISED", "Revised"),
                        ],
                        default="DRAFT",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "valid_until",
                    models.DateField(blank=True, null=True, verbose_name="valid until"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "terms_and_conditions",
                    models.TextField(blank=True, verbose_name="terms and conditions"),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="subtotal",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="tax amount",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="discount amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="total amount",
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="approved at"
                    ),
                ),
                (
                    "change_reason",
                    models.TextField(blank=True, verbose_name="change reason"),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_quotes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="approved by",
                    ),
                ),
                (
                    "construction_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="quotes",
                        to="construction.constructionrequest",
                        verbose_name="construction request",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_quotes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "parent_quote",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="revisions",
                        to="construction.quote",
                        verbose_name="parent quote",
                    ),
                ),
            ],
            options={
                "verbose_name": "quote",
                "verbose_name_plural": "quotes",
                "ordering": ("-created",),
                "unique_together": {("construction_request", "version")},
            },
        ),
        migrations.CreateModel(
            name="QuoteItem",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.TextField(verbose_name="description")),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="unit price",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="tax rate (%)",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="discount amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="total amount",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="metadata"),
                ),
                (
                    "quote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="construction.quote",
                        verbose_name="quote",
                    ),
                ),
            ],
            options={
                "verbose_name": "quote item",
                "verbose_name_plural": "quote items",
                "ordering": ("created",),
            },
        ),
        migrations.CreateModel(
            name="QuoteChangeLog",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Created"),
                            ("UPDATE", "Updated"),
                            ("APPROVE", "Approved"),
                            ("REJECT", "Rejected"),
                            ("REVISE", "Revised"),
                            ("SUBMIT", "Submitted for Approval"),
                        ],
                        max_length=20,
                        verbose_name="action",
                    ),
                ),
                ("changes", models.JSONField(default=dict, verbose_name="changes")),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "changed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="changed by",
                    ),
                ),
                (
                    "quote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="change_logs",
                        to="construction.quote",
                        verbose_name="quote",
                    ),
                ),
            ],
            options={
                "verbose_name": "quote change log",
                "verbose_name_plural": "quote change logs",
                "ordering": ("-created",),
            },
        ),
        migrations.CreateModel(
            name="ProjectUpdate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("progress", "Progress"),
                            ("risk", "Risk"),
                            ("note", "General Note"),
                            ("meeting", "Meeting"),
                        ],
                        default="progress",
                        max_length=20,
                        verbose_name="category",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                ("body", models.TextField(verbose_name="body")),
                (
                    "is_customer_visible",
                    models.BooleanField(
                        default=True, verbose_name="visible to customer"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_updates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="construction.project",
                        verbose_name="project",
                    ),
                ),
            ],
            options={
                "verbose_name": "project update",
                "verbose_name_plural": "project updates",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("blocked", "Blocked"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="priority",
                    ),
                ),
                (
                    "due_date",
                    models.DateField(blank=True, null=True, verbose_name="due date"),
                ),
                (
                    "requires_customer_action",
                    models.BooleanField(
                        default=False, verbose_name="requires customer action"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="completed at"
                    ),
                ),
                (
                    "overdue_notified_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="overdue notified at"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_tasks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="assigned to",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_project_tasks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="construction.project",
                        verbose_name="project",
                    ),
                ),
            ],
            options={
                "verbose_name": "project task",
                "verbose_name_plural": "project tasks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectMilestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "phase",
                    models.CharField(
                        choices=[
                            ("SITE_PREPARATION", "Site Preparation"),
                            ("FOUNDATION", "Foundation"),
                            ("FRAMING", "Framing"),
                            ("ROOFING", "Roofing"),
                            ("EXTERIOR", "Exterior Work"),
                            ("PLUMBING", "Plumbing"),
                            ("ELECTRICAL", "Electrical"),
                            ("INSULATION", "Insulation"),
                            ("DRYWALL", "Drywall"),
                            ("INTERIOR", "Interior Finishes"),
                            ("FLOORING", "Flooring"),
                            ("PAINTING", "Painting"),
                            ("LANDSCAPING", "Landscaping"),
                            ("FINAL_INSPECTION", "Final Inspection"),
                            ("COMPLETED", "Completed"),
                        ],
                        default="SITE_PREPARATION",
                        max_length=20,
                        verbose_name="project phase",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("ON_HOLD", "On Hold"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="NOT_STARTED",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "planned_start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="planned start date"
                    ),
                ),
                (
                    "actual_start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="actual start date"
                    ),
                ),
                ("planned_end_date", models.DateField(verbose_name="planned end date")),
                (
                    "actual_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="actual end date"
                    ),
                ),
                (
                    "completion_percentage",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="completion percentage",
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=14,
                        verbose_name="estimated cost",
                    ),
                ),
                (
                    "actual_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=14,
                        verbose_name="actual cost",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_milestones",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "depends_on",
                    models.ManyToManyField(
                        blank=True,
                        related_name="dependent_milestones",
                        to="construction.projectmilestone",
                        verbose_name="depends on",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to="construction.project",
                        verbose_name="project",
                    ),
                ),
            ],
            options={
                "verbose_name": "project milestone",
                "verbose_name_plural": "project milestones",
                "ordering": ["project", "planned_start_date"],
            },
        ),
        migrations.CreateModel(
            name="ProjectMessageReceipt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="read at"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="receipts",
                        to="construction.projectchatmessage",
                        verbose_name="message",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_message_receipts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "project message receipt",
                "verbose_name_plural": "project message receipts",
                "ordering": ("-read_at",),
            },
        ),
        migrations.CreateModel(
            name="ProjectMessageAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="projects/chat/%Y/%m/%d", verbose_name="file"
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="uploaded at"),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_chat_attachments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by",
                    ),
                ),
            ],
            options={
                "verbose_name": "project message attachment",
                "verbose_name_plural": "project message attachments",
            },
        ),
        migrations.CreateModel(
            name="ProjectDocumentVersion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(default=0, verbose_name="version"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="projects/documents/%Y/%m/%d", verbose_name="file"
                    ),
                ),
                (
                    "notes",
                    models.CharField(blank=True, max_length=255, verbose_name="notes"),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="uploaded at"),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="construction.projectdocument",
                        verbose_name="document",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_project_documents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by",
                    ),
                ),
            ],
            options={
                "verbose_name": "project document version",
                "verbose_name_plural": "project document versions",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.AddField(
            model_name="projectdocument",
            name="current_version",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="construction.projectdocumentversion",
                verbose_name="current version",
            ),
        ),
        migrations.AddField(
            model_name="projectdocument",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documents",
                to="construction.project",
                verbose_name="project",
            ),
        ),
        migrations.AddField(
            model_name="projectchatmessage",
            name="attachments",
            field=models.ManyToManyField(
                blank=True,
                related_name="messages",
                to="construction.projectmessageattachment",
                verbose_name="attachments",
            ),
        ),
        migrations.AddField(
            model_name="projectchatmessage",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chat_messages",
                to="construction.project",
                verbose_name="project",
            ),
        ),
        migrations.AddField(
            model_name="projectchatmessage",
            name="quote",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="chat_messages",
                to="construction.quote",
                verbose_name="related quote",
            ),
        ),
        migrations.AddField(
            model_name="projectchatmessage",
            name="sender",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sent_project_messages",
                to=settings.AUTH_USER_MODEL,
                verbose_name="sender",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="approved_quote",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="project",
                to="construction.quote",
                verbose_name="approved quote",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="construction_request",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="project",
                to="construction.constructionrequest",
                verbose_name="construction request",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="contractors",
            field=models.ManyToManyField(
                blank=True,
                related_name="contracted_projects",
                to=settings.AUTH_USER_MODEL,
                verbose_name="contractors",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="created_projects",
                to=settings.AUTH_USER_MODEL,
                verbose_name="created by",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="project_manager",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="managed_projects",
                to=settings.AUTH_USER_MODEL,
                verbose_name="project manager",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="construction_projects",
                to="properties.property",
                verbose_name="property",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="site_supervisor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="supervised_projects",
                to=settings.AUTH_USER_MODEL,
                verbose_name="site supervisor",
            ),
        ),
        migrations.CreateModel(
            name="GhanaPricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Base price in GHS",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="base price",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("GHS", "Ghana Cedi"), ("USD", "US Dollar")],
                        default="GHS",
                        max_length=3,
                        verbose_name="currency",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "eco_feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pricing",
                        to="construction.ecofeature",
                        verbose_name="eco feature",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pricing",
                        to="construction.ghanaregion",
                        verbose_name="region",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ghana pricing",
                "verbose_name_plural": "Ghana pricing",
                "ordering": ["region", "eco_feature"],
            },
        ),
        migrations.CreateModel(
            name="ConstructionRequestEcoFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of units of this eco feature",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="quantity",
                    ),
                ),
                (
                    "custom_specifications",
                    models.TextField(
                        blank=True,
                        help_text="Any custom specifications for this eco feature",
                        verbose_name="custom specifications",
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated cost for this eco feature in GHS",
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="estimated cost",
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this eco feature has been approved for the project",
                        verbose_name="is approved",
                    ),
                ),
                (
                    "added_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="added at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "construction_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_eco_features",
                        to="construction.constructionrequest",
                        verbose_name="construction request",
                    ),
                ),
                (
                    "eco_feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="construction_requests",
                        to="construction.ecofeature",
                        verbose_name="eco feature",
                    ),
                ),
            ],
            options={
                "verbose_name": "construction request eco feature",
                "verbose_name_plural": "construction request eco features",
                "ordering": ["eco_feature__category", "eco_feature__name"],
            },
        ),
        migrations.CreateModel(
            name="ConstructionMilestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                ("due_date", models.DateField(verbose_name="due date")),
                (
                    "completed_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="completed date"
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="is completed"),
                ),
                (
                    "construction_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to="construction.constructionrequest",
                        verbose_name="construction request",
                    ),
                ),
            ],
            options={
                "verbose_name": "construction milestone",
                "verbose_name_plural": "construction milestones",
                "ordering": ["due_date"],
            },
        ),
        migrations.CreateModel(
            name="ConstructionDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("PLAN", "Architectural Plan"),
                            ("PERMIT", "Building Permit"),
                            ("CONTRACT", "Contract"),
                            ("INVOICE", "Invoice"),
                            ("REPORT", "Report"),
                            ("PHOTO", "Progress Photo"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=10,
                        verbose_name="document type",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="construction/documents/", verbose_name="file"
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="uploaded at"),
                ),
                (
                    "construction_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="construction.constructionrequest",
                        verbose_name="construction request",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_construction_documents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by",
                    ),
                ),
            ],
            options={
                "verbose_name": "construction document",
                "verbose_name_plural": "construction documents",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.AddConstraint(
            model_name="projectmilestone",
            constraint=models.UniqueConstraint(
                fields=("project", "title"), name="unique_project_milestone_title"
            ),
        ),
        migrations.AddConstraint(
            model_name="projectmilestone",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("planned_start_date__lte", models.F("planned_end_date"))
                ),
                name="planned_start_before_end",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="projectmessagereceipt",
            unique_together={("message", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="projectdocumentversion",
            unique_together={("document", "version")},
        ),
        migrations.AlterUniqueTogether(
            name="ghanapricing",
            unique_together={("region", "eco_feature")},
        ),
        migrations.AlterUniqueTogether(
            name="constructionrequestecofeature",
            unique_together={("construction_request", "eco_feature")},
        ),
    ]
