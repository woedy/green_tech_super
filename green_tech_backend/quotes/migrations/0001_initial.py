# Generated by Django 4.2.7 on 2025-09-25 16:13

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("plans", "0001_initial"),
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Quote",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        editable=False,
                        max_length=32,
                        unique=True,
                        verbose_name="reference",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("viewed", "Viewed"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "currency_code",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "regional_multiplier",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        max_digits=6,
                        verbose_name="regional multiplier",
                    ),
                ),
                (
                    "subtotal_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="subtotal amount",
                    ),
                ),
                (
                    "allowance_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="allowance amount",
                    ),
                ),
                (
                    "adjustment_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="adjustment amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="total amount",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="internal notes")),
                (
                    "terms",
                    models.TextField(blank=True, verbose_name="terms and conditions"),
                ),
                (
                    "prepared_by_name",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="prepared by"
                    ),
                ),
                (
                    "prepared_by_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="prepared by email"
                    ),
                ),
                (
                    "recipient_name",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="recipient name"
                    ),
                ),
                (
                    "recipient_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="recipient email"
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="valid until"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="sent at"),
                ),
                (
                    "viewed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="viewed at"
                    ),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="accepted at"
                    ),
                ),
                (
                    "declined_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="declined at"
                    ),
                ),
                (
                    "signature_name",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="signature name"
                    ),
                ),
                (
                    "signature_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="signature email"
                    ),
                ),
                (
                    "signature_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="signature timestamp"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "build_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="quotes",
                        to="plans.buildrequest",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="quotes",
                        to="locations.region",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="QuoteLineItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("base", "Base scope"),
                            ("option", "Optional upgrade"),
                            ("allowance", "Allowance"),
                            ("adjustment", "Adjustment"),
                        ],
                        default="base",
                        max_length=20,
                        verbose_name="kind",
                    ),
                ),
                ("label", models.CharField(max_length=255, verbose_name="label")),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        max_digits=8,
                        verbose_name="quantity",
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="unit cost"
                    ),
                ),
                (
                    "apply_region_multiplier",
                    models.BooleanField(
                        default=True, verbose_name="apply regional multiplier"
                    ),
                ),
                (
                    "calculated_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="calculated total",
                    ),
                ),
                (
                    "position",
                    models.PositiveIntegerField(default=0, verbose_name="position"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="metadata"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "quote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="quotes.quote",
                    ),
                ),
            ],
            options={
                "ordering": ("position", "created_at"),
            },
        ),
        migrations.AddIndex(
            model_name="quote",
            index=models.Index(fields=["status"], name="quotes_quot_status_bc6cd2_idx"),
        ),
        migrations.AddIndex(
            model_name="quote",
            index=models.Index(
                fields=["build_request", "status"],
                name="quotes_quot_build_r_0963c6_idx",
            ),
        ),
    ]
